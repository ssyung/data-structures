;

        function makeContent(cont) {
            var contentHolder = '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>';
            for (var i = 0; i < cont.meetingGroups.length; i++) {
            if (i == 0) {
                contentHolder = contentHolder + '<h2>' + cont.meetingGroups[i].groupInfo.meetingAddress.substr(0, cont.meetingGroups[i].groupInfo.meetingAddress.indexOf(',')) + '</h2>';
            } 
                contentHolder = contentHolder + '<h1 id="firstHeading" class="firstHeading">';
                contentHolder = contentHolder + cont.meetingGroups[i].groupInfo.meetingName + '</h1>';
                contentHolder = contentHolder + '<h3>' + cont.meetingGroups[i].meetingDay[0] + ' Meetings</h3>';

                for (var j = 0; j < cont.meetingGroups[i].meetingType.length; j++) {
                    var mt, si;
                    if (cont.meetingGroups[i].meetingType[j] == "BB") {
                        mt = "Big Book ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "B") {
                        mt = "Beginners ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "C") {
                        mt = "Closed Discussion ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "S") {
                        mt = "Step ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "T") {
                        mt = "Tradition ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "O") {
                        mt = "Open Meeting ";
                    }
                    else if (cont.meetingGroups[i].meetingType[j] == "OD") {
                        mt = "Open Discussion ";
                    }
                    else {
                        mt = "";
                    }

                    contentHolder = contentHolder + cont.meetingGroups[i].meetingStartTime[j] + ' ' + mt + '<br>';
                }
                contentHolder = contentHolder + '</p>';
                contentHolder = contentHolder + '<div class="iw-bottom-gradient"></div>';
            }
            return contentHolder;
        }

        function setMarkers(map, locations) {
            // Add markers to the map
            var infowindow = new google.maps.InfoWindow({
                maxWidth: 200
            });

            for (var i = 0; i < locations.length; i++) {
                var meeting = locations[i];
                var myLatLng = new google.maps.LatLng(meeting._id.geolocation.lat, meeting._id.geolocation.lng);

                var contentWindow = makeContent(meetings[i]);


                var marker = new google.maps.Marker({
                    position: myLatLng,
                    map: map,
                    title: "Click for meeting info",
                    content: contentWindow,
                });

                google.maps.event.addListener(marker, 'click', function() {
                    infowindow.setContent(this.content);
                    infowindow.open(map, this);
                });
            }
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    </script>
</head>

<body>
    <div id="map-canvas"></div>
</body>

</html>
